{"mappings":"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","sources":["src/components/ResMenu.js","src/components/ResCategory.js","src/components/ItemList.js","src/utils/useRestuarantMenu.js"],"sourcesContent":[" \nimport { useParams } from \"react-router-dom\";\nimport {Shimmer} from \"./Shimmer\";\nimport ResCategory from \"./ResCategory\";\nimport useRestuarantMenu from \"../utils/useRestuarantMenu\";\nimport { useState } from \"react\";\n\n\nconst ResMenu = ()=>{\n\n    let {id}= useParams();\n    const resInfo = useRestuarantMenu(id)\n    \n    const [showIndex,setShowIndex] = useState(0);\n \n if(resInfo===null)\n {\n    return <Shimmer/>\n\n }\n \n    const { name,cuisines,costForTwoMessage } = resInfo?.cards[0]?.card?.card?.info;\n    const categories =  resInfo?.cards[2]?.groupedCard?.cardGroupMap?.REGULAR.cards.filter((c)=> c.card?.card?.['@type']=== \"type.googleapis.com/swiggy.presentation.food.v2.ItemCategory\"\n    );\n     \n   \nreturn (\n      <div className=\"text-center \">\n      <h1 className=\"font-bold my-5 text-2xl\">{name}</h1>\n      <p className=\"font-bold text-xl my-5\">\n      ( {`${cuisines.join(', ')} - ${costForTwoMessage}`} )\n      </p>\n\n      {categories.map((category,i)=>(\n      <ResCategory category={category} \n      setShowIndex={()=> {\n         showIndex==i ? setShowIndex(null):setShowIndex(i)\n      }\n      } showItems={i==showIndex?true:false}  key={category?.card?.card?.title}  />\n      ))}\n         \n      </div>\n\n\n\n\n    \n);\n\n\n}\nexport default ResMenu;","\nimport ItemList from \"./ItemList\";\nconst ResCategory= (props)=>{\nconst {category,showItems,setShowIndex } = props;\nconst {title,itemCards} = category?.card.card;\n\nconst handleClick = ()=>{\n    \n    setShowIndex();\n}\n    return (\n    <div className=\"text-black  flex justify-center  \">\n        {/* header */}\n        <div onClick={handleClick} className=\"cursor-pointer p-3 bg-gray-100 w-6/12  mb-2 shadow-xl rounded-md flex flex-col \">\n            <div className=\"flex justify-between\">\n            <span className=\" font-bold\">{title} ({ itemCards.length})</span>\n            {!showItems?\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\" />\n          </svg>\n           :\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 15.75l7.5-7.5 7.5 7.5\" />\n          </svg>\n          \n            \n            }\n            {/* body */}\n            \n    \n        </div>\n       { showItems && <ItemList itemCards={itemCards}  />}\n\n\n       </div>\n      \n       \n    </div>)\n\n}\nexport default ResCategory;","import ResCard from \"./ResCard\";\nimport { CDN_URL } from \"../utils/constants\";\nimport { useDispatch } from \"react-redux\";\n\nimport { addItem } from \"../utils/cartSlice\";\nconst ItemList = (props)=>{\n    const dispatch = useDispatch();\n    const {itemCards} = props;\n    const add = (item)=>{\n     \n        dispatch(addItem(item))\n\n    }\n    return (\n        <div>\n     {itemCards.map((item)=>(\n        <div key={item?.card?.info?.id} className=\"flex justify-between items-center text-left  p-2 m-2 mb-3 border-gray-300 border-b-2\" >\n        <div className=\"w-10/12\">\n            <span>{item?.card?.info?.name}</span>\n            <span> - ${item?.card?.info?.price/100 ?? item?.card?.info?.defaultPrice/100}</span>\n            <p className=\"text-xs text-gray-500\">{item?.card?.info?.description}</p>\n        </div>\n        <div className=\"relative w-2/12 flex justify-center   \">\n        <img className=\"ml-2   h-24 w-24  rounded-md\" src={CDN_URL+ item?.card?.info?.imageId}/>\n        <button type=\"button\"\n        onClick={(e)=>{\n            e.stopPropagation();\n            add(item?.card?.info);\n        }}\n        className=\"absolute bottom-0 bg-white shadow-md hover:shadow-lg hover:font-bold w-20 ml-2 \n        text-green-500 border p-1 rounded-md border-green-400  \">Add +</button>\n        </div>\n        </div>\n        ))}\n    </div>\n       \n      \n\n    )\n}\n\nexport default ItemList;","\nimport { useEffect, useState } from \"react\";\n\nconst useRestuarantMenu = (id) =>{\nconst [resInfo,setResInfo] = useState(null);\n    useEffect(()=>{\n     \n        fetchRes()\n           \n    },[])\n\n    const fetchRes =  ()=>{\n\n        let data =  fetch(`https://www.swiggy.com/dapi/menu/pl?page-type=REGULAR_MENU&complete-menu=true&lat=19.0759837&lng=72.8776559&restaurantId=${id}&submitAction=ENTER`)\n        .then((response) => response.json() ).then(({data})=>{\n        \n        setResInfo(data);\n    \n        });\n        \n    \n        \n    } \n\n\n    return resInfo;\n}\n\nexport default useRestuarantMenu;"],"names":["$2Vt6G","parcelRequire","$5970cd0ca8525df8$export$2e2bcd8739ae039","_resInfo_cards_","_resInfo_cards__card","_resInfo_cards__card_card","_resInfo_cards_1","_resInfo_cards__groupedCard","_resInfo_cards__groupedCard_cardGroupMap","id","$dAaLE","useParams","resInfo","$jJqy4","default","_useState","$fIwXP","useState","showIndex","setShowIndex","$cc6u1","jsx","$8ZSgB","Shimmer","_ref","cards","card","info","name","cuisines","costForTwoMessage","categories","groupedCard","cardGroupMap","REGULAR","filter","c","_c_card","_c_card_card","jsxs","className","concat","join","map","category","i","_category_card","_category_card_card","$4kOsB","showItems","title","$32802c10653ff0c1$export$2e2bcd8739ae039","props","itemCards","onClick","length","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","$50OfZ","$3a63efcc8c0a1cc1$export$2e2bcd8739ae039","dispatch","$9LlwE","useDispatch","item","_item_card","_item_card_info","_item_card1","_item_card_info1","_item_card2","_item_card_info2","_item_card3","_item_card_info3","_item_card4","_item_card_info4","_item_card5","_item_card_info5","price","defaultPrice","description","src","$hwFJE","CDN_URL","imageId","type","e","stopPropagation","$3nKKJ","addItem","add","$e5d6d04ac5d59b39$export$2e2bcd8739ae039","setResInfo","useEffect","fetchRes","fetch","then","response","json","param","data"],"version":3,"file":"ResMenu.ac55ac4f.js.map"}